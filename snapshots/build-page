#!/usr/bin/perl
use Cwd;
use File::Path qw(make_path);
use File::Temp;

use vars '$DB::inhibit_exit';
$DB::inhibit_exit = 0;

use strict;
use integer;

sub file_row($);
sub mtime($);
sub need($$);
sub size($);
sub update_diffs($$);

use constant {
    MAXKEEP => 60
};

my $tag = $ARGV[0];

my %var = ();

umask 0002;
$| = 1;

my $TMP = File::Temp->newdir();
my $wwwdir = getcwd;
my $http = "http://cygwin.com/snapshots";

our ($changelog,  $diff, $master, $perday, $perdaync);
for my $t (qw'changelog diff master perday perdaync') {
    no strict qw{refs};
    open my $fd, '<', "$t.template" or die "$t.template: $!\n";
    ${$t} = join '', <$fd>;
    close $fd;
}

chdir $wwwdir or die "couldn't cd to $wwwdir - $!\n";

my @month = ('', '01', '02', '03', '04', '05', '06', '07', '08',
	     '09', '10', '11', '12');
my @perdays = ();
our $arch;
our @snaps;
for $arch ('x86', 'x86_64') {
    my %var = ();
    $var{'arch'} = $arch;
    $var{'tag'} = defined($tag) ? " ($tag)" : '';
    my $dfd;
    opendir $dfd, $arch;
    my %bydate = ();
    @snaps = ();
    for (reverse sort readdir $dfd) {
	next unless /^(.*?)-(\d\d\d\d\d\d\d\d)\.(.*?)$/o;
	push @{$bydate{$2}}, "$arch/" . $_;
	push(@snaps, $2) if @snaps < MAXKEEP && $1 eq 'winsup-src' && $3 eq 'tar.xz';
    }
    closedir $dfd;

    for my $i (0..$#snaps) {
	update_diffs('winsup', $i);
	my $date = $snaps[$i];
	$var{'date'} = $date;
	($var{'longdate'} = $date) =~ s/(....)(..)(..)/$1-$month[$2]-$3/;

	my $time = mtime("$arch/cygwin1-$snaps[$i].dll.xz") || time;
	my ($ss, $mm, $hh, $mday, $m, $yr) = (gmtime($time))[0..5];
	$var{'longdate'} .= sprintf ' <font size=-1>%02d:%02d:%02d UTC</font>', $hh, $mm, $ss;
	($var{'longprev'} = $snaps[$i+1]) =~ s/(....)(..)(..)/$1-$month[$2]-$3/;
	if ($i < $#snaps) {
	    $var{'prev'} = $snaps[$i+1];
	    $var{'wsdfsz'} = size("$arch/winsup-diffs-$snaps[$i+1]-$date");
	    $var{'wsclsz'} = size("$arch/winsup-changelog-$snaps[$i+1]-$date");
	    $var{'changelog'} = $changelog;
	    0 while $var{'changelog'} =~ s/<var ([a-z]+)>/$var{$1}/ge;
	    $var{'diffs'} = $diff;
	    0 while $var{'diffs'} =~ s/<var ([a-z]+)>/$var{$1}/ge;
	} else {
	    $var{'changelog'} = '';
	    $var{'diffs'} = '';
	}

	$var{'xfiles'} = file_row("$arch/winsup-src-$snaps[$i].tar.xz");
	$var{'xfiles'} .= file_row("$arch/cygwin1-$snaps[$i].dll.xz");
	$var{'xfiles'} .= file_row("$arch/cygwin1-$snaps[$i].dbg.xz");
	$var{'xfiles'} .= file_row("$arch/cygwin-inst-$snaps[$i].tar.xz");
	$var{'xfiles'} .= file_row("$arch/cygwin-src-$snaps[$i].tar.xz");

	my $t;
	if ($i == $#snaps || (stat("$arch/winsup-diffs-$snaps[$i+1]-$date"))[7] > 0) {
	    $t = $perday;
	} else {
	    $t = $perdaync;
	}
	0 while $t =~ s/<var ([a-z]+)>/$var{$1}/ge;
	push @perdays, $t;
    }

    my @tounlink = reverse sort keys %bydate;
    for (my $i = MAXKEEP; $i < @tounlink; $i++) {
	unlink @{$bydate{$tounlink[$i]}};
    }
}

$var{'perday'} = join '', reverse sort @perdays;
0 while $master =~ s/<var ([a-z]+)>/$var{$1}/ge;

open my $fd, '>', 'index.html';
print $fd $master;
chmod 0775, $fd;
close $fd;

exit 0;

sub file_row($) {
    my $f = shift;
    return "" unless -f $f;
    my $sz = size($f);
    my $rv = "<tr>";
    $rv .= "<td><tt>&nbsp; $f</tt></td>";
    $rv .= "<td align=right colspan=3>$sz Kb</td>";
    if ($f !~ /^(.*\.tar)\.xz$/o) {
	$rv .= "<td align=center><br></td>";
    } else {
	$rv .= "<td align=center><a href=\"$1\">list</a></td>";
	if (!-e $1) {
	    open my $fd, '>', $1;
	    chmod 0664, $fd;
	    close $fd;
	}
    }
    $rv .= "<td align=center><a href=\"$http/$f\">download</a></td>\n";
    $rv .= "</tr>\n";
    return $rv;
}

sub size($) {
    my $f = shift;
    print "No file $_[0]\n" unless -f $f;
    my $sz = int(((stat _)[7]+1023) / 1024);
    0 while $sz =~ s/(.*\d)(\d\d\d)/$1,$2/;
    return $sz;
}

sub mtime($) {
    my $f = shift;
    if ( -f $f) {
	return (stat(_))[9];
    } else {
	return 0;
    }
}

sub update_diffs($$) {
    my $base = shift;
    my $i = shift;

    my $basesnap = $snaps[$i + 1] or return;
    my $nextsnap = $snaps[$i];
    my $basesrc = "$base-src-$basesnap";
    my $nextsrc = "$base-src-$nextsnap";

    my $sf = mtime("$arch/$basesrc.tar.xz");
    my $osf = mtime("$arch/$nextsrc.tar.xz");
    my $df = mtime("$arch/$base-diffs-$basesnap-$nextsnap");
    my $cl = mtime("$arch/$base-changelog-$basesnap-$nextsnap");

    if (!$df || $df < $sf || $df < $osf) {
	print "build $arch/$base-diffs-$basesnap-$nextsnap\n";
	my $basedir = need($basesnap, $basesrc);
	my $nextdir = need($nextsnap, $nextsrc);
	
	my $fnsnap = "$arch/$base-diffs-$basesnap-$nextsnap";
	open my $outfd, '>', $fnsnap or die "$0: couldn't open $fnsnap for output - $!\n";
	open my $difffd, '-|', "cd $TMP; exec diff -p -N -d -r -U2 $basedir $nextdir" or die "$0: diff $basedir $nextdir failed - $!\n";
	print $outfd "Differences between $basesnap and $nextsnap\n\n";
	my $keeper = 0;
	my $sawstuff = 0;
	while (<$difffd>) {
	    $keeper = !/\.snapshot-date|ChangeLog/o if /^diff /o;
	    print $outfd $_ if $keeper;
	    $sawstuff ||= $keeper;
	}
	close $difffd;
	chmod 0664, $outfd;
	close $outfd;
	unlink $fnsnap unless $sawstuff;
    }

    if (!$cl || $cl < $sf || $cl < $osf) {
	print "build $arch/$base-changelog-$basesnap-$nextsnap\n";
	my $basedir = need($basesnap, $basesrc);
	my $nextdir = need($nextsnap, $nextsrc);
	open OUT, '>', "$arch/$base-changelog-$basesnap-$nextsnap" or die "$0: couldn't open $arch/$base-changelog-$basesnap-$nextsnap for writing - $!\n";
	print OUT "ChangeLog for $basesnap to $nextsnap\n\n";
	open FIND, '-|', "cd $TMP/$basedir; exec find . -name ChangeLog -print" or die "$0: 'find -name Changelog -print' failed - $!\n";
	while (my $f = <FIND>) {
	    $f =~ s/[\r\n]+$//o;
	    open DIFF, '-|', 'diff', "$TMP/$basedir/$f", "$TMP/$nextdir/$f";
	    while (<DIFF>) {
		last if /^> /;
	    }
	    if (/^> /) {
		print OUT "---------- $f ----------\n\n";
		s/^\> //;
		print OUT;
		while (<DIFF>) {
		    last unless /^> /;
		    s/^\> //;
		    print OUT;
		}
	    }
	    close DIFF;
	}
	close FIND;
	chmod 0664, \*OUT;
	close OUT;
    }
}

sub need($$) {
    my ($snap, $txz) = @_;
    $txz = "$arch/$txz";
    if (!$::unpacked{$txz}) {
	print "unpacking $txz\n";
	$::unpacked{$txz} = 1;
	make_path("$TMP/$txz");
	system '/bin/tar', 'xf', "$txz.tar.xz", '-C', "$TMP/$txz";
    }
    return -d "$TMP/$txz/cygwin-snapshot-$snap-1" ?
	   "$txz/cygwin-snapshot-$snap-1" : $txz;
}
