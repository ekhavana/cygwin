The following files can be used to make a simple working dll with
the GNU-Win32 tools.  Create the separate files and then
follow the instructions to create the dll.  This has been tested
and works under both NT and Windows 95 under the command prompt
(and also under NT in the bash shell).

To build this dll and a program that uses it:

1) dlltool --def foo.def --output-exp foo.exp --output-lib foo.a --dllname foo.dll

2) gcc -c foo.c
3) gcc -c foo2.c
4) ld -o foo.dll foo.exp foo.o foo2.o

5) gcc main.c foo.a -o main.exe
6) main.exe

To explain this process a little, line 1 creates a library
called foo.a that can be linked against to create executables that
depend on the dll.  It does this by processing the foo.def file that
lists the exported functions.

In lines 2-4, we compile the .c files that make up the dll, and link them
referencing foo.exp, asking for the output file to be called foo.dll.

Finally in line 5 we create a program that calls the functions in the dll,
linking against the foo.a library.

Note that this process builds a non-relocatable dll.  If you get an
error message under Windows 95 saying "foo.dll can't load at the desired
address, and is not relocatable.  Contact your vendor to get...", you
should add --image-base=0x0800000 to the ld line where the number is a
memory address that's free on your machine.


Files:

------------------------------------------------------------
foo.c:
------------------------------------------------------------
int
doit (int i)
{
     return( doittoo(i) );
}
------------------------------------------------------------
foo2.c:
------------------------------------------------------------
int
doittoo(int i)
{
     return(i+10);
}
------------------------------------------------------------
foo.def:
------------------------------------------------------------
EXPORTS
doit
doittoo
------------------------------------------------------------
main.c:
------------------------------------------------------------
int
main()
{
        printf("doit(5) returns %d\n", doit(5));
        printf("doittoo(5) returns %d\n", doittoo(5));
}

